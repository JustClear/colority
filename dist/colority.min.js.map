{"version":3,"file":"colority.min.js","sources":["../src/index.js"],"sourcesContent":["export default function colority(imageURL, options, callback) {\n    if (!(this instanceof colority)) return new colority(imageURL, options, callback);\n\n    this.imageURL = imageURL;\n    this.options = {};\n    this.callback = () => {};\n\n    if (callback === undefined) {\n        this.callback = options;\n    } else {\n        this.options = options;\n        this.callback = callback;\n    }\n\n    preload(this.imageURL, image => {\n        const context = getContext(image.naturalWidth, image.naturalHeight);\n        context.drawImage(image, 0, 0);\n        const imageData = context.getImageData(0, 0, image.naturalWidth, image.naturalHeight).data;\n        const colors = {};\n        const results = [];\n\n        transformColors(imageData, this.options.skip || 10, rgb => colors[rgb] = rgb in colors ? colors[rgb] + 1 : 1);\n        mapColors(colors, (key, value) => {\n            results.push({\n                color: key,\n                count: value,\n            });\n        });\n        this.callback(results.sort((a, b) => b.count - a.count).map(result => result.color));\n    });\n}\n\nfunction preload(imageURL, done) {\n    const image = new Image();\n    image.crossOrigin = '*';\n    image.src = imageURL;\n    image.addEventListener('load', () => done(image));\n    image.addEventListener('error', () => done(image));\n}\n\nfunction getContext(width, height) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n}\n\nfunction transformColors(data, skip, callback) {\n    for (let i = 0; i < data.length; i += 4 * skip) {\n        callback(`rgb(${data[i]},${data[i + 1]},${data[i + 2]})`);\n    }\n}\n\nfunction mapColors(data, callback) {\n    for (let key in data) {\n        callback(key, data[key]);\n    }\n}\n"],"names":["colority","imageURL","options","callback","this","undefined","context","getContext","image","naturalWidth","naturalHeight","drawImage","colors","results","getImageData","data","_this","skip","rgb","key","value","push","sort","a","b","count","map","result","color","preload","done","Image","crossOrigin","src","addEventListener","width","height","canvas","document","createElement","transformColors","i","length","mapColors"],"mappings":"+LAAe,SAASA,EAASC,EAAUC,EAASC,mBAC1CC,gBAAgBJ,GAAW,OAAO,IAAIA,EAASC,EAAUC,EAASC,QAEnEF,SAAWA,OACXC,gBACAC,SAAW,kBAECE,IAAbF,OACKA,SAAWD,QAEXA,QAAUA,OACVC,SAAWA,KAGZC,KAAKH,SAAU,gBACbK,EAAUC,EAAWC,EAAMC,aAAcD,EAAME,iBAC7CC,UAAUH,EAAO,EAAG,OAEtBI,KACAC,OAFYP,EAAQQ,aAAa,EAAG,EAAGN,EAAMC,aAAcD,EAAME,eAAeK,KAI3DC,EAAKd,QAAQe,MAAQ,GAAI,mBAAOL,EAAOM,GAAOA,KAAON,EAASA,EAAOM,GAAO,EAAI,MACjGN,EAAQ,SAACO,EAAKC,KACZC,YACGF,QACAC,QAGVjB,SAASU,EAAQS,KAAK,SAACC,EAAGC,UAAMA,EAAEC,MAAQF,EAAEE,QAAOC,IAAI,mBAAUC,EAAOC,WAIrF,SAASC,EAAQ5B,EAAU6B,OACjBtB,EAAQ,IAAIuB,QACZC,YAAc,MACdC,IAAMhC,IACNiC,iBAAiB,OAAQ,kBAAMJ,EAAKtB,OACpC0B,iBAAiB,QAAS,kBAAMJ,EAAKtB,KAG/C,SAASD,EAAW4B,EAAOC,OACjBC,EAASC,SAASC,cAAc,mBAC/BJ,MAAQA,IACRC,OAASA,EACTC,EAAO9B,WAAW,MAG7B,SAASiC,EAAgBzB,EAAME,EAAMd,OAC5B,IAAIsC,EAAI,EAAGA,EAAI1B,EAAK2B,OAAQD,GAAK,EAAIxB,WACtBF,EAAK0B,OAAM1B,EAAK0B,EAAI,OAAM1B,EAAK0B,EAAI,QAI3D,SAASE,EAAU5B,EAAMZ,OAChB,IAAIgB,KAAOJ,IACHI,EAAKJ,EAAKI"}