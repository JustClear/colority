{"version":3,"file":"colority.js","sources":["../src/index.js"],"sourcesContent":["export default function colority(imageURL, options, callback) {\n    if (!(this instanceof colority)) return new colority(imageURL, options, callback);\n\n    this.imageURL = imageURL;\n    this.options = {};\n    this.callback = () => {};\n\n    if (callback === undefined) {\n        this.callback = options;\n    } else {\n        this.options = options;\n        this.callback = callback;\n    }\n\n    preload(this.imageURL, image => {\n        const context = getContext(image.naturalWidth, image.naturalHeight);\n        context.drawImage(image, 0, 0);\n        const imageData = context.getImageData(0, 0, image.naturalWidth, image.naturalHeight).data;\n        const colors = {};\n        const results = [];\n\n        transformColors(imageData, this.options.skip || 10, rgb => colors[rgb] = rgb in colors ? colors[rgb] + 1 : 1);\n        mapColors(colors, (key, value) => {\n            results.push({\n                color: key,\n                count: value,\n            });\n        });\n        this.callback(results.sort((a, b) => b.count - a.count).map(result => result.color));\n    });\n}\n\nfunction preload(imageURL, done) {\n    const image = new Image();\n    image.crossOrigin = '*';\n    image.src = imageURL;\n    image.addEventListener('load', () => done(image));\n    image.addEventListener('error', () => done(image));\n}\n\nfunction getContext(width, height) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n}\n\nfunction transformColors(data, skip, callback) {\n    for (let i = 0; i < data.length; i += 4 * skip) {\n        callback(`rgb(${data[i]},${data[i + 1]},${data[i + 2]})`);\n    }\n}\n\nfunction mapColors(data, callback) {\n    for (let key in data) {\n        callback(key, data[key]);\n    }\n}\n"],"names":["colority","imageURL","options","callback","undefined","context","getContext","image","naturalWidth","naturalHeight","drawImage","imageData","getImageData","data","colors","results","skip","rgb","key","value","push","sort","a","b","count","map","result","color","preload","done","Image","crossOrigin","src","addEventListener","width","height","canvas","document","createElement","transformColors","i","length","mapColors"],"mappings":";;;;;;AAAe,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+C;;;QACtD,EAAE,gBAAgBH,QAAlB,CAAJ,EAAiC,OAAO,IAAIA,QAAJ,CAAaC,QAAb,EAAuBC,OAAvB,EAAgCC,QAAhC,CAAP;;SAE5BF,QAAL,GAAgBA,QAAhB;SACKC,OAAL,GAAe,EAAf;SACKC,QAAL,GAAgB,YAAM,EAAtB;;QAEIA,aAAaC,SAAjB,EAA4B;aACnBD,QAAL,GAAgBD,OAAhB;KADJ,MAEO;aACEA,OAAL,GAAeA,OAAf;aACKC,QAAL,GAAgBA,QAAhB;;;YAGI,KAAKF,QAAb,EAAuB,iBAAS;YACtBI,UAAUC,WAAWC,MAAMC,YAAjB,EAA+BD,MAAME,aAArC,CAAhB;gBACQC,SAAR,CAAkBH,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B;YACMI,YAAYN,QAAQO,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BL,MAAMC,YAAjC,EAA+CD,MAAME,aAArD,EAAoEI,IAAtF;YACMC,SAAS,EAAf;YACMC,UAAU,EAAhB;;wBAEgBJ,SAAhB,EAA2B,MAAKT,OAAL,CAAac,IAAb,IAAqB,EAAhD,EAAoD;mBAAOF,OAAOG,GAAP,IAAcA,OAAOH,MAAP,GAAgBA,OAAOG,GAAP,IAAc,CAA9B,GAAkC,CAAvD;SAApD;kBACUH,MAAV,EAAkB,UAACI,GAAD,EAAMC,KAAN,EAAgB;oBACtBC,IAAR,CAAa;uBACFF,GADE;uBAEFC;aAFX;SADJ;cAMKhB,QAAL,CAAcY,QAAQM,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ;mBAAUA,EAAEC,KAAF,GAAUF,EAAEE,KAAtB;SAAb,EAA0CC,GAA1C,CAA8C;mBAAUC,OAAOC,KAAjB;SAA9C,CAAd;KAdJ;;;AAkBJ,SAASC,OAAT,CAAiB3B,QAAjB,EAA2B4B,IAA3B,EAAiC;QACvBtB,QAAQ,IAAIuB,KAAJ,EAAd;UACMC,WAAN,GAAoB,GAApB;UACMC,GAAN,GAAY/B,QAAZ;UACMgC,gBAAN,CAAuB,MAAvB,EAA+B;eAAMJ,KAAKtB,KAAL,CAAN;KAA/B;UACM0B,gBAAN,CAAuB,OAAvB,EAAgC;eAAMJ,KAAKtB,KAAL,CAAN;KAAhC;;;AAGJ,SAASD,UAAT,CAAoB4B,KAApB,EAA2BC,MAA3B,EAAmC;QACzBC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;WACOJ,KAAP,GAAeA,KAAf;WACOC,MAAP,GAAgBA,MAAhB;WACOC,OAAO9B,UAAP,CAAkB,IAAlB,CAAP;;;AAGJ,SAASiC,eAAT,CAAyB1B,IAAzB,EAA+BG,IAA/B,EAAqCb,QAArC,EAA+C;SACtC,IAAIqC,IAAI,CAAb,EAAgBA,IAAI3B,KAAK4B,MAAzB,EAAiCD,KAAK,IAAIxB,IAA1C,EAAgD;0BAC5BH,KAAK2B,CAAL,CAAhB,SAA2B3B,KAAK2B,IAAI,CAAT,CAA3B,SAA0C3B,KAAK2B,IAAI,CAAT,CAA1C;;;;AAIR,SAASE,SAAT,CAAmB7B,IAAnB,EAAyBV,QAAzB,EAAmC;SAC1B,IAAIe,GAAT,IAAgBL,IAAhB,EAAsB;iBACTK,GAAT,EAAcL,KAAKK,GAAL,CAAd;;;;;;"}