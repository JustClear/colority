function colority(a,b,c){var d=this;return this instanceof colority?void(this.imageURL=a,this.options={},this.callback=function(){},c===void 0?this.callback=b:(this.options=b,this.callback=c),preload(this.imageURL,function(a){var b=getContext(a.naturalWidth,a.naturalHeight);b.drawImage(a,0,0);var c=b.getImageData(0,0,a.naturalWidth,a.naturalHeight).data,e={},f=[];transformColors(c,d.options.skip||10,function(a){return e[a]=a in e?e[a]+1:1}),mapColors(e,function(a,b){f.push({color:a,count:b})}),d.callback(f.sort(function(c,a){return a.count-c.count}).map(function(a){return a.color}))})):new colority(a,b,c)}function preload(a,b){var c=new Image;c.crossOrigin="*",c.src=a,c.addEventListener("load",function(){return b(c)}),c.addEventListener("error",function(){return b(c)})}function getContext(a,b){var c=document.createElement("canvas");return c.width=a,c.height=b,c.getContext("2d")}function transformColors(a,b,c){for(var d=0;d<a.length;d+=4*b)c("rgb("+a[d]+","+a[d+1]+","+a[d+2]+")")}function mapColors(a,b){for(var c in a)b(c,a[c])}export default colority;
//# sourceMappingURL=colority.es.min.js.map
